<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zhenyu.mapper.ArticleCommentMapper" >
  <resultMap id="BaseResultMap" type="com.zhenyu.model.ArticleComment" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="article_id" property="articleId" jdbcType="VARCHAR" />
    <result column="comment" property="comment" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="parent_id" property="parentId" jdbcType="VARCHAR" />
    <result column="col1" property="col1" jdbcType="VARCHAR" />
    <result column="col2" property="col2" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, article_id, comment, user_id, parent_id, col1, col2
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_article_comment
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_article_comment
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.zhenyu.model.ArticleComment" >
    insert into t_article_comment (id, article_id, comment, 
      user_id, parent_id, col1, 
      col2)
    values (#{id,jdbcType=VARCHAR}, #{articleId,jdbcType=VARCHAR}, #{comment,jdbcType=VARCHAR}, 
      #{userId,jdbcType=VARCHAR}, #{parentId,jdbcType=VARCHAR}, #{col1,jdbcType=VARCHAR}, 
      #{col2,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zhenyu.model.ArticleComment" >
    insert into t_article_comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="articleId != null" >
        article_id,
      </if>
      <if test="comment != null" >
        comment,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="col1 != null" >
        col1,
      </if>
      <if test="col2 != null" >
        col2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="articleId != null" >
        #{articleId,jdbcType=VARCHAR},
      </if>
      <if test="comment != null" >
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="col1 != null" >
        #{col1,jdbcType=VARCHAR},
      </if>
      <if test="col2 != null" >
        #{col2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zhenyu.model.ArticleComment" >
    update t_article_comment
    <set >
      <if test="articleId != null" >
        article_id = #{articleId,jdbcType=VARCHAR},
      </if>
      <if test="comment != null" >
        comment = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="col1 != null" >
        col1 = #{col1,jdbcType=VARCHAR},
      </if>
      <if test="col2 != null" >
        col2 = #{col2,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zhenyu.model.ArticleComment" >
    update t_article_comment
    set article_id = #{articleId,jdbcType=VARCHAR},
      comment = #{comment,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=VARCHAR},
      col1 = #{col1,jdbcType=VARCHAR},
      col2 = #{col2,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>